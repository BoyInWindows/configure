
"{{{ ->linux 配置

	set nocompatible	"不要兼容vi
	filetype on  "启用文件类型侦测
	filetype plugin on	"针对不同的文件类型加载对应的插件
	filetype plugin indent on  "启用错进
	set mouse-=a	"禁用鼠标
	set smartindent  "启用只能对齐方式
	set autoindent	"每行的缩进值与上一行相等
	set cindent	"使用C/C++语言的自动缩进方式

	set tabstop=2  "设置tab键的宽度
	""set expandtab  "将tab键转换为空格
	set noexpandtab "将空格转换为tab
	"%retab! "若不加! 则只处理行首的tab
	set shiftwidth=2	"换行时自动错进2个空格
	"set softtabstop=2  "逢2空格进1制表符
	"set smarttab	"指定按一次backspace就删除shiftwidth宽度的空格

	set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
	colo default	"默认主题什么东西

	set foldenable "启用折叠
	" set foldmethod=indent  "indent 折叠方式
	set foldmethod=marker  "marker 折叠方式

	set autoread	"当文件在外部被修改,自动更新该文件
	set hlsearch	"高亮搜索
	set incsearch  "在输入要搜索的文字时,事实匹配
	set ignorecase	"搜索模式里忽略大小写
	set smartcase  "如果搜索模式包含大写字符,有以上选项才有效

	""set number	"显示行号
	"set relativenumber  "相对行号 想要相对行号起作用要放在显示行号后面
	set laststatus=2	"启用状态栏信息
	set cmdheight=2  "设置命令行的高度为2,默认为1

	set cursorline	"设置光标高亮显示
	set numberwidth=3  "行号栏宽度
	set nowrap	"禁止自动换行
	set linespace=0  "字符间插入的像素行数目
	""set undofile	"无限undo

	set isk+=-	"蒋-连接符也设置为单词
	"winpos 100 10	"指定窗口出现位置
	"set lines=24 columns=170	"指定窗口大小<Up>

	" 256 colors	-> for the vim-airline
	set t_Co=256

	set nobackup	"设置无备份文件
	set noswapfile	"设置无临时文件
	set vb t_vb=	"关闭提示音

"}}}

"{{{ ->热键配置

	let mapleader=","  "修改leader键为逗号

	nnoremap <leader><space> :noh<cr>  "使用<leader>空格来取消高亮

	"文件类型切换
	nmap <leader>fj :set ft=javascript<cr>
	nmap <leader>fc :set ft=css<cr>
	nmap <leader>fh :set ft=html<cr>
	
	"标签切换"
	set autochdir
	nmap <leader>h :tabp<cr>
	nmap <leader>l :tabn<cr>

	"窗口切换 <c-k,j,h,l>
	noremap <c-k> <c-w>k
	noremap <c-j> <c-w>j
	noremap <c-h> <c-w>h
	noremap <c-l> <c-w>l

	"插入模式 <c-k,j,h,l,u>
	inoremap <c-k> <up>
	inoremap <c-j> <down>
	inoremap <c-h> <left>
	inoremap <c-l> <right>
	inoremap <c-u> <end>
	" inoremap <c-m> <c-o>o  "不行 原来cm是enter的本体
	" inoremap <c-i> <esc>	"不行 原来ci是tab的本体

	"括号填充
	inoremap ( ()<left>
	inoremap [ []<left>
	inoremap { {}<left>
	inoremap ) <c-r>=ClosePair(')')<cr>
	inoremap ] <c-r>=ClosePair(']')<cr>
	inoremap } <c-r>=ClosePair('}')<cr>
	function! ClosePair(char)
		if getline('.')[col('.') - 1] == a:char
			return "\<right>"
		else
			return a:char
		endif
	endf
	inoremap ' <c-r>=ClosePairs("'")<cr>
	inoremap " <c-r>=ClosePairs('"')<cr>
	function! ClosePairs(char)
		if getline('.')[col('.') - 1] == a:char
			return "\<right>"
		else
			return a:char.a:char."\<esc>i"
		endif
	endf

"}}}

"{{{ ->vundle配置
	set nocompatible	"禁用vi兼容模式"
	filetype off	"禁用文件类型侦测"

	set rtp+=/home/boyin/.vim/bundle/Vundle.vim
	call vundle#begin()

	"使用vundle来管理插件，这个必须有"
	Plugin 'VundleVim/Vundle.vim'

	Plugin 'editorconfig/editorconfig-vim'

	Plugin 'The-NERD-tree'
	Plugin 'The-NERD-Commenter'

	Plugin 'vim-airline/vim-airline'
	Plugin 'EasyMotion'

	Plugin 'ack.vim'

	Plugin 'mattn/emmet-vim'
	""Plugin 'vim-less'

	Plugin 'digitaltoad/vim-jade.git'

	call vundle#end()  "required"
	filetype plugin indent on "required"
"}}}

"{{{ ->插件配置
	nmap <leader>nt :NERDTreeToggle<cr>
	noremap <c-\> :NERDTreeToggle<cr>

	" vim-airline
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#left_sep = ' '
	let g:airline#extensions#tabline#left_alt_sep = '|'

	" easy-motion
	let g:EasyMotion_leader_key = ','

"}}}

"自动命令，每次输入.vimrc后，都会执行这个自动命令，source一次~/.vimrc
""autocmd! bufwritepost .vimrc source ~/.vimrc

if exists('$TMUX')
	"echo 'yes'
else
	"echo 'no'
endif

